declare const _default: {
    SingularToPlural: {
        search: string;
        switch: string;
        fix: string;
        box: string;
        process: string;
        address: string;
        case: string;
        stack: string;
        wish: string;
        fish: string;
        jeans: string;
        "funky jeans": string;
        "my money": string;
        category: string;
        query: string;
        ability: string;
        agency: string;
        movie: string;
        archive: string;
        index: string;
        wife: string;
        safe: string;
        half: string;
        move: string;
        salesperson: string;
        person: string;
        spokesman: string;
        man: string;
        woman: string;
        basis: string;
        diagnosis: string;
        diagnosis_a: string;
        datum: string;
        medium: string;
        stadium: string;
        analysis: string;
        my_analysis: string;
        node_child: string;
        child: string;
        experience: string;
        day: string;
        comment: string;
        foobar: string;
        newsletter: string;
        old_news: string;
        news: string;
        series: string;
        miniseries: string;
        species: string;
        quiz: string;
        perspective: string;
        ox: string;
        photo: string;
        buffalo: string;
        tomato: string;
        dwarf: string;
        elf: string;
        information: string;
        equipment: string;
        bus: string;
        status: string;
        status_code: string;
        mouse: string;
        louse: string;
        house: string;
        octopus: string;
        virus: string;
        alias: string;
        portfolio: string;
        vertex: string;
        matrix: string;
        matrix_fu: string;
        axis: string;
        taxi: string;
        testis: string;
        crisis: string;
        rice: string;
        shoe: string;
        horse: string;
        prize: string;
        edge: string;
        database: string;
        "|ice": string;
        "|ouse": string;
        slice: string;
        police: string;
    };
    CamelToUnderscore: {
        Product: string;
        SpecialGuest: string;
        ApplicationController: string;
        Area51Controller: string;
    };
    UnderscoreToLowerCamel: {
        product: string;
        special_guest: string;
        application_controller: string;
        area51_controller: string;
    };
    CamelToUnderscoreWithoutReverse: {
        HTMLTidy: string;
        HTMLTidyGenerator: string;
        FreeBSD: string;
        HTML: string;
    };
    ClassNameToForeignKeyWithUnderscore: {
        Person: string;
        BillingAccount: string;
    };
    ClassNameToForeignKeyWithoutUnderscore: {
        Person: string;
        BillingAccount: string;
    };
    ClassNameToTableName: {
        PrimarySpokesman: string;
        NodeChild: string;
    };
    StringToParameterized: {
        "Donald E. Knuth": string;
        "Random text with *(bad)* characters": string;
        Allow_Under_Scores: string;
        "Trailing bad characters!@#": string;
        "!@#Leading bad characters": string;
        "Squeeze   separators": string;
        "Test with + sign": string;
        "Test with malformed utf8 \u00A9": string;
    };
    StringToParameterizeWithNoSeparator: {
        "Donald E. Knuth": string;
        "With-some-dashes": string;
        "Random text with *(bad)* characters": string;
        "Trailing bad characters!@#": string;
        "!@#Leading bad characters": string;
        "Squeeze   separators": string;
        "Test with + sign": string;
        "Test with malformed utf8 \u00A9": string;
    };
    StringToParameterizeWithPreserveCase: {
        "Donald E. Knuth": string;
        "Random text with *(bad)* Characters": string;
        Allow_Under_Scores: string;
        "Trailing BAD characters!@#": string;
        "!@#leading bad Characters": string;
        "squeeze   Separators": string;
        "Test with + Sign": string;
        "Test with malformed UTF8 \u00A9": string;
    };
    StringToParameterizeWithUnderscore: {
        "Donald E. Knuth": string;
        "Random text with *(bad)* characters": string;
        "With-some-dashes": string;
        Retain_underscore: string;
        "Trailing bad characters!@#": string;
        "!@#Leading bad characters": string;
        "Squeeze   separators": string;
        "Test with + sign": string;
        "Test with malformed utf8 \u00A9": string;
    };
    StringToParameterizedAndNormalized: {
        Malmö: string;
        Garçons: string;
        OpsÙ: string;
        Ærøskøbing: string;
        Aßlar: string;
        "Japanese: \u65E5\u672C\u8A9E": string;
    };
    UnderscoreToHuman: {
        employee_salary: string;
        employee_id: string;
        underground: string;
    };
    UnderscoreToHumanWithoutCapitalize: {
        employee_salary: string;
        employee_id: string;
        underground: string;
    };
    MixtureToTitleCase: {
        active_record: string;
        ActiveRecord: string;
        "action web service": string;
        "Action Web Service": string;
        "Action web service": string;
        actionwebservice: string;
        Actionwebservice: string;
        "david's code": string;
        "David's code": string;
        "david's Code": string;
        "sgt. pepper's": string;
        "i've just seen a face": string;
        "maybe you'll be there": string;
        "\u00BFpor qu\u00E9?": string;
        "Fred\u2019s": string;
        "Fred`s": string;
    };
    OrdinalNumbers: {
        "-1": string;
        "-2": string;
        "-3": string;
        "-4": string;
        "-5": string;
        "-6": string;
        "-7": string;
        "-8": string;
        "-9": string;
        "-10": string;
        "-11": string;
        "-12": string;
        "-13": string;
        "-14": string;
        "-20": string;
        "-21": string;
        "-22": string;
        "-23": string;
        "-24": string;
        "-100": string;
        "-101": string;
        "-102": string;
        "-103": string;
        "-104": string;
        "-110": string;
        "-111": string;
        "-112": string;
        "-113": string;
        "-1000": string;
        "-1001": string;
        "0": string;
        "1": string;
        "2": string;
        "3": string;
        "4": string;
        "5": string;
        "6": string;
        "7": string;
        "8": string;
        "9": string;
        "10": string;
        "11": string;
        "12": string;
        "13": string;
        "14": string;
        "20": string;
        "21": string;
        "22": string;
        "23": string;
        "24": string;
        "100": string;
        "101": string;
        "102": string;
        "103": string;
        "104": string;
        "110": string;
        "111": string;
        "112": string;
        "113": string;
        "1000": string;
        "1001": string;
    };
    UnderscoresToDashes: {
        street: string;
        street_address: string;
        person_street_address: string;
    };
    Irregularities: {
        person: string;
        man: string;
        child: string;
        sex: string;
        move: string;
        cow: string;
        zombie: string;
        genus: string;
    };
    WordsToConstantCase: {
        Conciliation: string;
        conciliation: string;
        bankAccount: string;
        BankAccount: string;
        "bank-account": string;
        bank_account: string;
        "Bank Account": string;
        "Multiple   Bank Account": string;
    };
};
export default _default;
